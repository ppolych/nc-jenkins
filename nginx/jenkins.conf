# Map for proper WebSocket upgrade header
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

# Optional: docker's internal DNS for dynamic upstream resolving
resolver 127.0.0.11 valid=30s ipv6=off;

# --- HTTP â†’ HTTPS redirect ---
server {
    listen 80;
    listen [::]:80;
    server_name _;

    return 301 https://$host$request_uri;
}

# --- HTTPS terminator with HTTP/2 ---
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;

    # --- TLS certs (mount these from ./nginx/certs) ---
    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # Reasonable TLS settings
    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_tickets off;

    # Modern ciphers (okay defaults; adjust if you need FIPS/legacy)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # HSTS (enable after confirming HTTPS works; comment at first run)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Security headers (basic)
    add_header X-Frame-Options "sameorigin" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Body size (tune if needed)
    client_max_body_size 100m;

    # Upstream (Docker service name)
    set $jenkins_upstream http://jenkins:8080;

    location / {
        proxy_pass $jenkins_upstream;

        # HTTP/1.1 and WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Forwarded headers so Jenkins knows it's behind HTTPS
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  https;
        proxy_set_header X-Forwarded-Host   $host;
        proxy_set_header X-Forwarded-Port   443;

        # Timeouts & buffering suitable for Jenkins console streaming, etc.
        proxy_read_timeout 1d;
        proxy_send_timeout 1d;
        proxy_request_buffering off;
        proxy_buffering off;

        proxy_redirect off;
    }
}
